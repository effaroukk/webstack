{"ast":null,"code":"const handleSubmit = async endpoint => {\n  try {\n    const response = await fetch(`/api/auth/${endpoint}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    setMessage(data.message || data.error);\n  } catch (error) {\n    setMessage(`Request failed: ${error.message}`);\n    console.error('Fetch error:', error);\n  }\n};","map":{"version":3,"names":["handleSubmit","endpoint","response","fetch","method","headers","body","JSON","stringify","formData","ok","Error","status","data","json","setMessage","message","error","console"],"sources":["/home/efqay/webstack/frontend/src/components/Auth.js"],"sourcesContent":["const handleSubmit = async (endpoint) => {\n    try {\n        const response = await fetch(`/api/auth/${endpoint}`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(formData),\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        setMessage(data.message || data.error);\n    } catch (error) {\n        setMessage(`Request failed: ${error.message}`);\n        console.error('Fetch error:', error);\n    }\n};\n\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,QAAQ,IAAK;EACrC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAaF,QAAQ,EAAE,EAAE;MAClDG,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACC,QAAQ;IACjC,CAAC,CAAC;IAEF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBT,QAAQ,CAACU,MAAM,EAAE,CAAC;IAC7D;IAEA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;IAClCC,UAAU,CAACF,IAAI,CAACG,OAAO,IAAIH,IAAI,CAACI,KAAK,CAAC;EAC1C,CAAC,CAAC,OAAOA,KAAK,EAAE;IACZF,UAAU,CAAC,mBAAmBE,KAAK,CAACD,OAAO,EAAE,CAAC;IAC9CE,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;EACxC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}